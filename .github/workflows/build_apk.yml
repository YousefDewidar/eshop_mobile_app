# name: Build Flutter APK and Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"

      - name: Install dependencies
        run: flutter pub get

      - name: Restore keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-key.jks

      - name: Build signed APK (split per ABI)
        run: |
          flutter build apk --release --split-per-abi \
          --dart-define=KEYSTORE_PATH=release-key.jks \
          --dart-define=KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
          --dart-define=KEY_ALIAS=${{ secrets.KEY_ALIAS }} \
          --dart-define=KEY_PASSWORD=${{ secrets.KEY_PASSWORD}}

      - name: Archive APKs
        run: |
          mkdir release-apks
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk release-apks/
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk release-apks/
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk release-apks/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: v${{ github.run_number }}
          name: "Release v${{ github.run_number }}"
          body: |
            📦 New Flutter APK release
            📝 Commit: ${{ github.event.head_commit.message }}
            🕒 Date: $(date +'%Y-%m-%d %H:%M')
          files: release-apks/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
